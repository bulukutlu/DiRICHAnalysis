#ifndef CONSTANTS_H
#define CONSTANTS_H

#include "Utility.h"
#include <map>

/// This namespace holds some useful constants
namespace constants
{
  /// This gain correction is taken from the single SiPM lab measurement with 17ns ToT, pulled to 17ns
  /// Start with 0 for convenience. Channels count from 1 to 16.
  const std::map<Padiwa, std::vector<Float_t>> padiwaGainCorr{
    { Padiwa::p1500_0, {0, 0.987607, 0.982198, 0.982853, 0.962533, 0.986201, 0.971491, 0.986511, 0.964003, 0.977723, 0.98086, 0.997423, 0.991264, 0.995791, 0.969362, 0.988589, 0.977917} },
    { Padiwa::p1500_1, {0, 0.980463, 0.975225, 0.969166, 0.959458, 0.98996, 0.968009, 1.01952, 0.975157, 1.01541, 0.984274, 1.03706, 0.984229, 0.988672, 0.97452, 0.99212, 0.986311} },
    { Padiwa::p1510_0, {0, 0.971294, 0.955605, 0.980716, 0.968239, 0.988139, 0.982677, 0.971876, 0.973666, 0.995571, 0.976427, 1.00056, 0.984334, 1.00815, 0.985369, 1.0177, 0.958632} },
    { Padiwa::p1510_1, {0, 0.770173, 0.750401, 0.762083, 0.759169, 0.783463, 0.765596, 0.780638, 0.764233, 0.788778, 0.765545, 0.796847, 0.767447, 0.774087, 0.767256, 0.779657, 0.736988} },
    { Padiwa::p1520_0, {0, 0.991795, 0.979855, 1.02407, 1.00601, 1.02291, 0.889292, 0.98788, 0.997152, 1.00998, 1.00036, 0.986877, 1.01166, 1.01326, 1.00687, 1.00016, 0.906896} },
    { Padiwa::p1520_1, {0, 0.947647, 0.908554, 1.01081, 0.903525, 0.905796, 0.890025, 1.00982, 0.98794, 1.01928, 0.96671, 1.01787, 1.0079, 1.00569, 1.0118, 1.0125, 1.00322} },
    { Padiwa::p1530_0, {0, 0.981866, 0.963517, 0.981669, 0.906477, 0.996072, 0.992507, 0.96107, 0.976094, 0.987845, 0.997806, 0.928907, 1.00933, 1.01977, 1.00189, 1.01579, 1.01581} },
    { Padiwa::p1530_1, {0, 0.980721, 0.974142, 0.976805, 0.963183, 0.992286, 0.979266, 1.00755, 0.992255, 1.01589, 0.977732, 1.02697, 1.00499, 0.89888, 1.00851, 0.996421, 1.00923} }
  };

  /// T0 calibration is taken from lab measurement
  const std::map<Padiwa, std::vector<Float_t>> padiwaTimeCorr{
    { Padiwa::p1500_0, {0, 6.93889E-16, 1.11542, 0.8119, 2.251916, -0.922404, -0.453114, 0.8883776, 0.155795, -0.938464, -1.540544, -0.809134, -1.552644, -0.692764, -0.464704, -2.004604, -2.406544} },
    { Padiwa::p1500_1, {0, 2.517826, 2.66 ,3.397055, 4.096766, 2.263641, 1.699249, 0.276526, 1.177086, -1.945154, -0.044184, -1.795594, -1.466974, 5.072366, 5.563236, 3.990506, 1.566279} },
    { Padiwa::p1510_0, {0, 6.93889E-16, 1.11542, 1.24223, 2.67931, -0.456091, -0.0149989, 1.3712,0.504082, -0.370934, -1.08655, -0.454727, -1.31195, -0.195293, -0.0461142, -1.59216, -1.91812} },
    { Padiwa::p1510_1, {0, 2.891333, 2.330744, 2.8694499, 4.381363, 2.458993, 2.126462, 0.312753, 1.072663, -2.297937, -0.179747, -1.741817, -1.241587, 5.008823, 5.596693, 4.036363, 1.282623} },
    { Padiwa::p1520_0, {0, 6.93889E-16, 1.11542, 0.934946, 2.728777, -0.540214, -0.227886, 1.211543, 0.485613, -0.730095, -1.434413, -0.420441, -1.241343, -0.531263, -0.35043, -1.803833, -2.009693} },
    { Padiwa::p1520_1, {0, 2.891333, 2.0, 2.890576515, 3.845229, 1.818433, 1.217863, -0.1303969, 0.809853, -2.326017, -0.38771699, -2.312257, -1.806617, 4.719783, 5.478213, 3.806037, 1.246643} },
    { Padiwa::p1530_0, {0, 6.93889E-16, 1.32542, 1.16687, 2.82989, -0.452611, -0.0387911, 1.36946, 0.700189, -0.505421, -0.957971, -0.212678, -1.27323, -0.0845989, 0.0808505, -1.39277, -1.85497} },
    { Padiwa::p1530_1, {0, 2.517826, 3.275819, 4.234145, 4.983406, 3.082846, 2.491707, 1.043966, 2.101356, -1.143034, 0.760086, -0.998524, -0.563224, 5.807756, 6.502226, 4.881126, 2.503614} }
  };

  /// Mapping: fibers in layer
  const std::map<Int_t, std::vector<Float_t>> testModuleGainCorr{
    { 1, {0, 1.01756, 1.13049, 0.961194, 1.01615, 1.03061, 1.03093, 1.01222, 1.03952, 1.02418, 1.04839, 1.00747, 1.03168, 1.02917, 1.09407, 0.959934, 1.08383, 1.02722, 1.03063, 0.967899, 1.03021, 0.916707, 0.987822, 1.0377, 0.997188, 0.97635, 1.0474, 1.04184, 1.02215, 0.95847, 1.01981, 0.984399, 1} },
    { 2, {0, 1.10268, 1.12357, 1.05235, 1.10826, 1.08693, 1.05727, 1.10271, 1.11615, 1.05991, 1.0389, 1.05644, 1.06378, 1.05769, 1.07892, 1.01485, 1.05459, 1.04893, 1.04956, 1.04361, 1.12681, 1.02459, 1.07985, 0.980756, 1.0469, 1.05099, 1.02804, 1.02652, 1.04735, 1.0438, 1.09815, 1.11668, 1.08084} },
    { 3, {0, 0.984313, 1.06928, 1.04402, 0.979044, 0.904923, 0.975538, 1.05317, 1.00462, 1.03763, 0.999218, 2.15065, 0.999866, 0.936693, 1.01763, 0.954727, 1.12425, 1.00721, 1.10563, 1.07315, 0.978296, 1.02348, 1.10705, 1.00583, 0.986814, 1.04021, 1.00423, 1.03445, 1.10378, 0.958093, 0.829266, 1.0036, 1.03191} },
    { 4, {0, 1.07219, 1.0836, 0.97014, 0.988368, 1.14203, 0.96263, 1.10147, 1.22094, 1.06694, 1.08884, 0.965461, 1.02077, 0.961892, 0.952797, 0.98126, 1.07823, 1.05948, 1.02497, 1.02983, 1.03269, 1.18899, 1.01033, 1.02153, 1.02627, 0.964498, 1.0039, 1.0044, 1.02945, 1.03526, 0.999944, 0.974704, 0.958631} },
    { 5, {0, 0.97638, 1.15566, 0.959076, 1.07122, 0.954682, 1.07249, 0.976371, 1.05611, 0.967512, 1.10026, 0.987327, 1.08084, 0.938223, 1.01522, 0.980814, 1.08118, 0.921657, 0.982472, 0.954617, 1.01384, 1.0137, 1.04914, 0.994897, 1.05253, 0.942088, 1.14041, 0.965618, 1.19864, 0.957307, 1.1974, 0.987671, 1.36039} },
    { 6, {0, 1.04901, 1.26341, 1.10695, 1.21882, 1.04924, 1.11204, 1.0395, 1.07608, 1.02255, 1.12895, 0.980368, 1.00826, 1.09127, 1.10719, 1.0058, 1.04224, 1.00333, 1.00565, 1.02327, 1.02384, 1.01148, 1.07204, 1.05302, 1.09787, 0.925881, 1.10989, 1.03991, 1.08769, 1.06221, 1.0619, 1.05693, 0.995045} },
    { 7, {0, 0.995394, 1.24109, 1.06771, 1.15107, 0.96462, 1.13591, 1.01184, 1.0078, 1.05656, 1.09123, 1.09774, 1.08649, 1.03265, 1.03764, 0.969875, 1.00683, 1.02026, 0.99377, 1.07846, 0.980422, 1.01811, 1.08802, 1.00305, 1.03796, 1.02845, 1.06615, 0.961765, 1.05218, 1.00289, 1.04129, 1.0006, 1.00902} },
    { 8, {0, 1.08731, 1.07163, 1.07364, 1.0985, 1.10152, 1.0416, 1.33397, 1.21385, 1.1496, 1.20425, 1.19269, 1.13712, 1.12446, 1.08371, 1.09677, 1.041, 1.00934, 1.02438, 1.0722, 1.01843, 1.12161, 1.06105, 1.10506, 1.02172, 1.08304, 0.99867, 1.01926, 0.981239, 1.07711, 1.06633, 1.19612, 0.987036} }
  };

  const std::map<Padiwa, std::string> padiwaNameMap {
    { Padiwa::p1500_0, "1500_0" },
    { Padiwa::p1500_1, "1500_1" },
    { Padiwa::p1510_0, "1510_0" },
    { Padiwa::p1510_1, "1510_1" },
    { Padiwa::p1520_0, "1520_0" },
    { Padiwa::p1520_1, "1520_1" },
    { Padiwa::p1530_0, "1530_0" },
    { Padiwa::p1530_1, "1530_1" }
  };

  const std::map<Padiwa, Int_t> padiwaPosMap {
    { Padiwa::p1500_0, 0 },
    { Padiwa::p1500_1, 1 },
    { Padiwa::p1510_0, 2 },
    { Padiwa::p1510_1, 3 },
    { Padiwa::p1520_0, 4 },
    { Padiwa::p1520_1, 5 },
    { Padiwa::p1530_0, 6 },
    { Padiwa::p1530_1, 7 }
  };

  const std::vector<std::string> padiwaNames{ "1500_0",
                                              "1500_1",
                                              "1510_0",
                                              "1510_1",
                                              "1520_0",
                                              "1520_1",
                                              "1530_0",
                                              "1530_1"
  };

} // namespace constants

#endif